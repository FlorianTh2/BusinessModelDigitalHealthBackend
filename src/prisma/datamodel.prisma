enum Role {
  USER
  ADMIN
}

type User {
  id: ID! @id

  project_ids: [Project!]! @relation(name: "ProjectsByUser", onDelete: CASCADE)

  firstName: String!
  lastName: String!
  email: String! @unique
  role:  Role! @default(value: USER)
  password: String!
  verificationCode: String
  verified: Boolean! @default(value: false)
  phoneNumber: String
  
  updatedBy: User @relation(name: "UserRecordUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}



type Project{
  id: ID! @id

  user_id: User! @relation(name: "ProjectsByUser", link: INLINE, onDelete: SET_NULL)
  canvas_ids: [Canvas!]! @relation(name: "CanvasByProject", onDelete: CASCADE)

  name: String!

  createdBy: User! @relation(name: "ProjectRecordCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ProjectRecordUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type Canvas{
  id: ID! @id

  project_id: Project! @relation(name: "CanvasByProject", link: INLINE, onDelete: SET_NULL)
  strategy_id: Strategy @relation(name: "CanvasByStrategy", link: INLINE, onDelete: SET_NULL)
  pattern_ids: [Pattern!]! @relation(name: "PatternByCanvas", onDelete: SET_NULL)
  table_id: Table! @relation(link: INLINE, , onDelete: CASCADE)

  name: String!

  createdBy: User! @relation(name: "CanvasRecordCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "CanvasRecordUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}



type Pattern{
  id: ID! @id

  canvas_ids: [Canvas!]! @relation(name: "PatternByCanvas", onDelete: SET_NULL)
  table_id: Table! @relation(link: INLINE, , onDelete: CASCADE)
  company_ids: [Company!]! @relation(name: "CompanyByPattern", onDelete: SET_NULL)
  strategy_pattern_ids: [StrategyPattern!]! @relation(name: "PatternByStrategyPattern", onDelete: SET_NULL)

  name: String!
  description: String
  actorWeight: Int
  valuePropositionWeight: Int
  valueCreationWeight: Int
  valueDeliveryWeight: Int
  revenueWeight: Int
  expenseWeight: Int
  networkEffectWeight: Int
  regulatoryWeight: Int
  technicalInfrastructureWeight: Int



  createdBy: User! @relation(name: "PatternRecordCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "PatternRecordUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}


type Strategy{
  id: ID! @id

  canvas_ids: [Canvas!]! @relation(name: "CanvasByStrategy", onDelete: CASCADE)
  strategy_pattern_ids: [StrategyPattern!]! @relation(name: "StrategyByStrategyPattern", onDelete: SET_NULL)

  name: String!
  description: String

  createdBy: User! @relation(name: "StrategyRecordCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "StrategyRecordUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type StrategyPattern{
  id: ID! @id

  strategy_id: Strategy! @relation(name: "StrategyByStrategyPattern", link: INLINE, onDelete: SET_NULL)
  pattern_id: Pattern! @relation(name: "PatternByStrategyPattern", link: INLINE, onDelete: SET_NULL)

  weight: Int!

  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}


type Table{
  id: ID! @id

  actor_entry_ids: [Actor!]! @relation(name: "ActorByTable", onDelete: SET_NULL)
  value_proposition_entry_ids: [ValueProposition!]! @relation(name: "ValuePropositionByTable", onDelete: SET_NULL)
  value_creation_entry_ids: [ValueCreation!]! @relation(name: "ValueCreationByTable", onDelete: SET_NULL)
  value_delivery_entry_ids: [ValueDelivery!]! @relation(name: "ValueDeliveryByTable", onDelete: SET_NULL)
  revenue_entry_ids: [Revenue!]! @relation(name: "RevenueByTable", onDelete: SET_NULL)
  expense_entry_ids: [Expense!]! @relation(name: "ExpenseByTable", onDelete: SET_NULL)
  network_effect_entry_ids: [NetworkEffect!]! @relation(name: "NetworkEffectByTable", onDelete: SET_NULL)
  technical_infrastructure_entry_ids: [TechnicalInfrastructure!]! @relation(name: "TechnicalInfrastructureByTable", onDelete: SET_NULL)
  regulatory_entry_ids: [Regulatory!]! @relation(name: "RegulatoryByTable", onDelete: SET_NULL)
}


type Company{
  id: ID! @id

  pattern_ids: [Pattern!]! @relation(name: "CompanyByPattern", onDelete: SET_NULL)

  name: String!
  description: String

  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}




"""Table section"""

type Actor{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "ActorByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "ActorEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ActorEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type ValueProposition{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "ValuePropositionByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "ValuePropositionEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ValuePropositionEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type ValueCreation{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "ValueCreationByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "ValueCreationEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ValueCreationEntryUpdatedBy"link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type ValueDelivery{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "ValueDeliveryByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "ValueDeliveryEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ValueDeliveryEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type Revenue{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "RevenueByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "RevenueEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "RevenueEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type Expense{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "ExpenseByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "ExpenseEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "ExpenseEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type NetworkEffect{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "NetworkEffectByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "NetworkEffectEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "NetworkEffectEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type TechnicalInfrastructure{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "TechnicalInfrastructureByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "TechnicalInfrastrctureEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "TechnicalInfrastructureEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}

type Regulatory{
  id: ID! @id

  table_ids: [Table!]! @relation(name: "RegulatoryByTable", onDelete: SET_NULL)

  text: String!
  note: String

  createdBy: User! @relation(name: "RegulatoryEntryCreatedBy", link: INLINE)
  updatedBy: User! @relation(name: "RegulatoryEntryUpdatedBy", link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt:  DateTime! @updatedAt
}