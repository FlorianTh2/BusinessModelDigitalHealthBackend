# import * from '../generated/schema/prisma.graphql'

type Query {
  """User login"""
  login(email: String!, password: String!): AuthPayload!
  
  """Check if email address is free"""
  checkEmailAddress(email: String!): Boolean!


  getUser(id: ID!) : User!
  getAllUsers: [User!]!


  getProject(id: ID!) : Project!
  getAllProjects: [Project!]!


  getCanvas(id: ID!) : Canvas!
  getAllCanvases: [Canvas!]!


  getPattern(id: ID!) : Pattern!
  getAllPattern: [Pattern!]!


  getTable(id: ID!) : Table!
  getAllTables: [Table!]!


  getCompany(id: ID!): Company!
  getAllCompanies: [Company!]!



  getActor(id: ID!): Actor!
  getAllActors: [Actor!]!


  getValueProposition(id: ID!): ValueProposition!
  getAllValuePropositions: [ValueProposition!]!

  getStrategy(id: ID!): Strategy!
  getAllStrategys: [Strategy!]!

}

type Mutation {
  """User registration"""
  registrate(data: NewUser!): User!
  
  """Delete User"""
  deleteUser: User

  createProject(name: String): Project!

  updateProject(projectId: ID!, data: ProjectUpdateInput!): Project!

  deleteProject(projectId: ID!): Project!

  createCanvas(data: CanvasCreateInput!): Canvas!

  updateCanvas(canvasId: ID!, data: CanvasUpdateInput!): Canvas!

  deleteCanvas(canvasId: ID!): Canvas!

  createActor(data: ActorCreateInput!): Actor!

  updateActor(actorId: ID!, data: ActorUpdateInput!): Actor!

  deleteActor(actorId: ID!): Actor!

  createValueProposition(data: ValuePropositionCreateInput!): ValueProposition!
  
  updateValueProposition(valuePropositionId: ID!, data: ValuePropositionUpdateInput!): ValueProposition!

  deleteValueProposition(valuePropositionId: ID!):ValueProposition!

  createPattern(data: PatternCreateInput!): Pattern!

  updatePattern(patternId: ID!, data: PatternUpdateInput!):Pattern!

  deletePattern(patternId: ID!):Pattern!
  
}

"""
type Subscription {
}
"""

type AuthPayload {
  token: String!,
  user: User!
}


input NewUser {
  firstName: String!,
  lastName: String!,
  email: String!,
  password: String!
}
